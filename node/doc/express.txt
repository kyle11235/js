
### install nodejs
	1.download binary package
	2.set node path


### use express create standard project
	1.install express-generator -g 
	2.express test
	
	be familiar with:
	1.basic route
		
		app.get('/', function (req, res) {
		  res.send('Hello World!');
		});
		
		
		app.post('/', function (req, res) {
		  res.send('Got a POST request');
		});
	
	2.res operation 
	
		res.send(...)
		res.json(...)
		
	3.get url param
	
		var user_id = req.param('token');
		
	4.get route param
	
		app.get('/api/:version', function(req, res) {
		    res.send(req.params.version);
		});
		  
	5.post params 
	
		npm install body-parser --save
		var bodyParser = require('body-parser');
		app.use(bodyParser.json()); // support json encoded bodies
		
		app.post('/api/users', function(req, res) {
		    var user_id = req.body.id;
		    var token = req.body.token;
		    var geo = req.body.geo;
		
		    res.send(user_id + ' ' + token + ' ' + geo);
		});
		
	6.express.Router (kind of express sub app)
	
		birds.js:
			var express = require('express');
			var router = express.Router();
			
			router.get('/about', function(req, res) {
			  res.send('About birds');
			});
		
			module.exports = router;
				
		main.js:
			var birds = require('./birds');
			app.use('/birds', birds);
						
	 7.sub app (kind of middleware)
	 	
	 	app.use('/birds', xxx);
	 	xxx can be another express app or router
	 	
	 8.middleware
	 
	 	actually above app.use(xxx) like app.use(bodyParser.json()) or app.use(some router or sub app) is middleware
	 	middleware is function intersects the request
	 	not only main app but sub app or router can use middleware
	 	
	 	var myLogger = function (req, res, next) {
		  console.log('LOGGED');
		  next();
		};
		
		app.use(myLogger);
		
		app.get('/', function (req, res) {
		  res.send('Hello World!');
		});
		

### create an app manually
	1.use npm init to be guided to create ...package.json
	2.manually create main js according to package.json
	3.use new package? use npm install xx -save to add to package.json
	

